version: '3'

services:
  database:
    image: 'timescale/timescaledb:2.10.1-pg13'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 3s
      retries: 3
  kafka:
    image: 'bitnami/kafka:3.5.1'
    ports:
      - '9092:9092'
    environment:
    - KAFKA_ENABLE_KRAFT=yes
    - KAFKA_CFG_PROCESS_ROLES=broker,controller
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_BROKER_ID=1
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_NODE_ID=1
    - KAFKA_KRAFT_CLUSTER_ID=L3C0Pr26QQS2yoz-ENkGww
    healthcheck:
      test: kafka-cluster.sh cluster-id --bootstrap-server 127.0.0.1:9092
      interval: 10s
      timeout: 3s
      retries: 3
  keycloak:
    image: 'quay.io/keycloak/keycloak:22.0.0'
    hostname: keycloak
    ports:
      - 8123:8080
    environment:
    - KEYCLOAK_ADMIN=admin
    - KEYCLOAK_ADMIN_PASSWORD=admin
    command:
      - start-dev
    healthcheck:
      test: bash -c ':> /dev/tcp/127.0.0.1/8080'
      interval: 10s
      timeout: 3s
      retries: 3
  keycloak-config:
    image: 'quay.io/keycloak/keycloak:22.0.0'
    volumes:
      - ./keycloak-config.sh:/tmp/keycloak-config.sh
    entrypoint: bash -c
    command:
      - /tmp/keycloak-config.sh
    restart: "no"
    depends_on:
      keycloak:
        condition: service_healthy
  keycloak-config-done:
    image: 'alpine'
    restart: "no"
    depends_on:
      keycloak-config:
        condition: service_completed_successfully
